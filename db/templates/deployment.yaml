apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ include "db.fullname" . }}
  labels:
    app.kubernetes.io/name: {{ include "db.name" . }}
    helm.sh/chart: {{ include "db.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "db.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "db.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          # Use secret in real usage
          - name: MYSQL_ROOT_PASSWORD
            value: petclinic
          - name: MYSQL_DATABASE
            value: petclinic
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          volumeMounts:
          - name: mysql-data-volume
            mountPath: /var/lib/mysql
          - name: mysql-init-volume
            mountPath: /docker-entrypoint-initdb.d/
      initContainers:
      - name: copy
        image: busybox
        command: ["/bin/sh", "-c"]
        args: ["wget https://github.com/alexkonkin/petclinic/raw/master/conf/mysql/schema.sql -P /docker-entrypoint-initdb.d/"]
        volumeMounts:
        - name: mysql-init-volume
          mountPath: /docker-entrypoint-initdb.d/
      volumes:
      - name: mysql-data-volume
        persistentVolumeClaim:
          claimName: mysql-data-claim
      - name: mysql-init-volume
        persistentVolumeClaim:
          claimName: mysql-init-claim


#          livenessProbe:
#            httpGet:
#              path: /
#              port: mysql
#          readinessProbe:
#            httpGet:
#              path: /
#              port: mysql
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
